name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull request to the main branch

jobs:
  test:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment for the job

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout the code to the runner

    - name: Set up Python
      uses: actions/setup-python@v2  # Set up Python environment
      with:
        python-version: '3.9'  # Use Python 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Install dependencies from requirements.txt

    - name: Install MongoDB (MongoDB 5.0 for compatibility)
      run: |
        sudo apt-get update
        sudo apt-get install -y mongodb-org  # Install MongoDB
        sudo service mongod start  # Start MongoDB service

    - name: Set up MongoDB environment variables
      run: |
        echo "MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}" >> $GITHUB_ENV
        echo "MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}" >> $GITHUB_ENV
      env:
        MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
        MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}

    - name: Run unit tests
      run: |
        python -m unittest discover -s flask_app/tests  # Discover and run tests from the tests directory

    - name: Upload test results
      if: failure()  # Upload test results only if tests fail
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: test-results
